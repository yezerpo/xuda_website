name: generator

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          cache-dependency-path: |
            **/pnpm-lock.yaml

      - name: Install dependencies
        run: |
          corepack enable
          pnpm install --frozen-lockfile

      - name: Build documentation
        env:
          NODE_OPTIONS: --max_old_space_size=8192
        run: |-
          pnpm run docs:build

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: src/.vuepress/dist

      - name: Install Tencent Cloud COS CLI
        run: |
          pip3 install coscmd

      - name: Configure Tencent Cloud COS
        env:
          TENCENT_COS_SECRET_ID: ${{ secrets.TENCENT_COS_SECRET_ID }}
          TENCENT_COS_SECRET_KEY: ${{ secrets.TENCENT_COS_SECRET_KEY }}
          TENCENT_COS_BUCKET: ${{ secrets.TENCENT_COS_BUCKET }}
          TENCENT_COS_REGION: ${{ secrets.TENCENT_COS_REGION }}
        run: |
          coscmd config -a $TENCENT_COS_SECRET_ID -s $TENCENT_COS_SECRET_KEY -b $TENCENT_COS_BUCKET -r $TENCENT_COS_REGION

      - name: Upload to Tencent Cloud COS
        run: |
          coscmd upload -rs -f src/.vuepress/dist/ / --delete

      - name: Get changed files
        id: get_changes
        run: |
          git diff --name-only HEAD^ HEAD > changed_files.txt
          changed_files.txt

          while read -r file; do
            echo "/${file#docs/}" >> cdn_paths.txt
          done < changed_files.txt
          
          echo "Changed files to process:"
          cat cdn_paths.txt
          
          echo "PATHS_TO_PURGE=$(cat cdn_paths.txt | tr '\n' ' ')" >> $GITHUB_ENV

      - name: Purge changed files on Tencent CDN
        if: env.PATHS_TO_PURGE != ''
        env:
          TENCENT_CDN_DOMAIN: ${{ secrets.TENCENT_CDN_DOMAIN }}
        run: |
          tccli cdn PurgePathCache \
            --Paths "$PATHS_TO_PURGE" \
            --FlushType flush \
            --Domain $TENCENT_CDN_DOMAIN
          
          echo "CDN purge completed for changed files"