name: Autoupdate

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  generator:
    name: Generator
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          cache-dependency-path: |
            **/pnpm-lock.yaml

      - name: Install dependencies
        run: |
          corepack enable
          pnpm install --frozen-lockfile

      - name: Build documentation
        env:
          NODE_OPTIONS: --max_old_space_size=8192
        run: |-
          pnpm run docs:build

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: src/.vuepress/dist
    
      - name: Upload Dist Artifact
        uses: actions/upload-artifact@v4
        with:
          name: docs-dist
          path: src/.vuepress/dist/
          retention-days: 1
  upload:
    name: Upload
    runs-on: ubuntu-latest
    needs: generator
    steps:
      - name: Download Dist Artifact
        uses: actions/download-artifact@v4
        with:
          name: docs-dist
          path: src/.vuepress/dist/

      - name: Install coscmd and tccli
        run: |
          pip3 install coscmd tccli

      - name: Configure Tencent Cloud COS
        env:
          TENCENT_COS_SECRET_ID: ${{ secrets.TENCENT_COS_SECRET_ID }}
          TENCENT_COS_SECRET_KEY: ${{ secrets.TENCENT_COS_SECRET_KEY }}
          TENCENT_COS_BUCKET: ${{ secrets.TENCENT_COS_BUCKET }}
          TENCENT_COS_REGION: ${{ secrets.TENCENT_COS_REGION }}
        run: |
          coscmd config -a $TENCENT_COS_SECRET_ID -s $TENCENT_COS_SECRET_KEY -b $TENCENT_COS_BUCKET -r $TENCENT_COS_REGION

      - name: Upload to Tencent Cloud COS
        run: |
          coscmd upload -rs -f src/.vuepress/dist/ / --delete
          
  scrape:
    name: Scrape
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Execute remote command via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.REMOTE_HOST }}
          port: ${{ secrets.REMOTE_PORT }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          passphrase: ${{ secrets.REMOTE_SSH_PASSPHRASE }}
          script: |
            cd /opt/1panel/www/sites/srch.yezer.cn/index
            docker run -t --rm --network=host -e MEILISEARCH_HOST_URL='https://srch.yezer.cn' -e MEILISEARCH_API_KEY='${{ secrets.MEILISEARCH_API_KEY }}' -v ./scraper.json:/docs-scraper/config.json getmeili/docs-scraper:latest pipenv run ./docs_scraper config.json